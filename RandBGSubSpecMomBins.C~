#include <stdlib.h>


//TFile *infile = TFile::Open("/w/work3/home/chris/LatestAnalysisRuns/Data/DataJul18/HistoSelector/Pi0Analysis/PPi0StrictCutsDariaPhiRandBGSub.root");
TFile *infile = TFile::Open("/w/work3/home/chris/LatestAnalysisRuns/Data/DataJul18/HistoSelector/Pi0Analysis/PPi0NonStrictCutsSpecMomBins.root");

void RandBGSubSpecMomBins() { 
 // TFile* ofile = new TFile("/w/work3/home/chris/LatestAnalysisRuns/Data/DataJul18/HistoSelector/Pi0Analysis/BGSUBBEDPPi0StrictCutsDariaPhiRandBGSub.root","recreate");	
  TFile* ofile = new TFile("/w/work3/home/chris/LatestAnalysisRuns/Data/DataJul18/HistoSelector/Pi0Analysis/BGSUBBEDPPi0NonStrictCutsSpecMomBins.root","recreate");	

//  string dirs[5] = {"Random","TimeCoinc", "Cut1","SignalTiming","BackgroundTiming"};
  string dirs[3] = {"Cut1","SignalTiming","BackgroundTiming"};
				
  TDirectory *weightsDir = infile->GetDirectory(dirs[1].c_str());	//WeightsDir is top lev folder
  TIter	nextTbinDir(weightsDir->GetListOfKeys());
  TKey 	*tbinKey;
  TDirectory *outWeightsDir = ofile->mkdir(dirs[1].c_str());

  while ((tbinKey=(TKey*)nextTbinDir())) {
    TDirectory *tbinDir = weightsDir->GetDirectory(tbinKey->GetName()); //tbinDir is my W var.
    TIter	nextEbinDir(tbinDir->GetListOfKeys());
    TKey 	*ebinKey;
    TDirectory *outTBinDir = outWeightsDir->mkdir(tbinKey->GetName());

    while ((ebinKey=(TKey*)nextEbinDir())) {
      TDirectory *ebinDir = tbinDir->GetDirectory(ebinKey->GetName()); //ebinDir is my costh
      TIter nextPolbinDir(ebinDir->GetListOfKeys());
      TKey  *polbinKey;
      TDirectory *outEBinDir = outTBinDir->mkdir(ebinKey->GetName());

      while ((polbinKey=(TKey*)nextPolbinDir())){   //Looping round my polarisation states - +
	TDirectory *polbinDir = ebinDir->GetDirectory(polbinKey->GetName());
	TIter nextSpec(polbinDir->GetListOfKeys());
	TKey    *specKey;
        TDirectory *outPolBinKey = outEBinDir->mkdir(polbinKey->GetName());

	 while ((specKey=(TKey*)nextSpec())) {
	        TDirectory *specbinDir = polbinDir->GetDirectory(specKey->GetName());
		TIter nextHist(specbinDir->GetListOfKeys());
		TKey	*histKey;
		TDirectory *outSpecBinKey = outPolBinDir->mkdir(specbinKey->GetName());
		outSpecBinKey->cd();			
	
		while ((histKey=(TKey*)nextHist())) {
		  //Getting  Signal and bg histo
	 	 TH1F* hist = (TH1F*) histKey->ReadObj();
	  	TString histBgName ="/" + dirs[2] + "/" + (TString)tbinDir->GetName()+ "/"  +  (TString)ebinDir->GetName() + "/" + (TString)polbinDir->GetName() + "/" + (TString)histKey->GetName() ;
   	  	TH1F* histBg = (TH1F*)infile->Get(histBgName); 
	  	//Adding signal and bg histo based on ratio of two windows
	  hist->Add(histBg,-1.0);
//	cout<< histKey->GetName() << " =signal  " <<endl; 
//	cout<< histBgName << " =background  " <<endl; 
	  hist->Write();  //Sort out file name and set up directory structure in outfile

	}  //Closing while hist key		
      }   //Closing while nextPolbin
    }    //Closing while nextEbindir costh
  }     //Closing while nextTbindir W
  ofile->Close();
} //closing main function
	

